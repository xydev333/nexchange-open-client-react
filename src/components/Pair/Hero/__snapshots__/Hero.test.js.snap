// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Hero renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <I18n
    ns="translations"
  >
    [Function]
  </I18n>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            PerExchangePairHEAD.title
          </title>
          <meta
            content="PerExchangePairHEAD.meta_description"
            name="description"
          />
        </HelmetWrapper>,
        <div
          className="hero"
        >
          <Connect(ErrorAlert) />
          <div
            className="container"
          >
            <div
              className="row"
            >
              <div
                className="col-xs-12"
              >
                <div
                  className="brand"
                >
                  <h1>
                    PerExchangePairBODY.H1
                  </h1>
                  <Trans
                    i18nKey="hero.2"
                  >
                    <h2>
                      Simple. 
                      <span
                        className="text-green"
                      >
                        Secure
                      </span>
                      . Transparent.
                    </h2>
                  </Trans>
                </div>
              </div>
              <div
                className="widget"
              >
                <Connect(OrderBookWidget)
                  selectedCoin={
                    Object {
                      "deposit": "eth",
                      "receive": "usd",
                    }
                  }
                />
              </div>
            </div>
          </div>
          <Connect(CoinPrices) />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <title>
              PerExchangePairHEAD.title
            </title>,
            <meta
              content="PerExchangePairHEAD.meta_description"
              name="description"
            />,
          ],
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "PerExchangePairHEAD.title",
            },
            "ref": null,
            "rendered": "PerExchangePairHEAD.title",
            "type": "title",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "content": "PerExchangePairHEAD.meta_description",
              "name": "description",
            },
            "ref": null,
            "rendered": null,
            "type": "meta",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Connect(ErrorAlert) />,
            <div
              className="container"
            >
              <div
                className="row"
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="brand"
                  >
                    <h1>
                      PerExchangePairBODY.H1
                    </h1>
                    <Trans
                      i18nKey="hero.2"
                    >
                      <h2>
                        Simple. 
                        <span
                          className="text-green"
                        >
                          Secure
                        </span>
                        . Transparent.
                      </h2>
                    </Trans>
                  </div>
                </div>
                <div
                  className="widget"
                >
                  <Connect(OrderBookWidget)
                    selectedCoin={
                      Object {
                        "deposit": "eth",
                        "receive": "usd",
                      }
                    }
                  />
                </div>
              </div>
            </div>,
            <Connect(CoinPrices) />,
          ],
          "className": "hero",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="row"
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="brand"
                  >
                    <h1>
                      PerExchangePairBODY.H1
                    </h1>
                    <Trans
                      i18nKey="hero.2"
                    >
                      <h2>
                        Simple. 
                        <span
                          className="text-green"
                        >
                          Secure
                        </span>
                        . Transparent.
                      </h2>
                    </Trans>
                  </div>
                </div>
                <div
                  className="widget"
                >
                  <Connect(OrderBookWidget)
                    selectedCoin={
                      Object {
                        "deposit": "eth",
                        "receive": "usd",
                      }
                    }
                  />
                </div>
              </div>,
              "className": "container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-xs-12"
                  >
                    <div
                      className="brand"
                    >
                      <h1>
                        PerExchangePairBODY.H1
                      </h1>
                      <Trans
                        i18nKey="hero.2"
                      >
                        <h2>
                          Simple. 
                          <span
                            className="text-green"
                          >
                            Secure
                          </span>
                          . Transparent.
                        </h2>
                      </Trans>
                    </div>
                  </div>,
                  <div
                    className="widget"
                  >
                    <Connect(OrderBookWidget)
                      selectedCoin={
                        Object {
                          "deposit": "eth",
                          "receive": "usd",
                        }
                      }
                    />
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="brand"
                    >
                      <h1>
                        PerExchangePairBODY.H1
                      </h1>
                      <Trans
                        i18nKey="hero.2"
                      >
                        <h2>
                          Simple. 
                          <span
                            className="text-green"
                          >
                            Secure
                          </span>
                          . Transparent.
                        </h2>
                      </Trans>
                    </div>,
                    "className": "col-xs-12",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <h1>
                          PerExchangePairBODY.H1
                        </h1>,
                        <Trans
                          i18nKey="hero.2"
                        >
                          <h2>
                            Simple. 
                            <span
                              className="text-green"
                            >
                              Secure
                            </span>
                            . Transparent.
                          </h2>
                        </Trans>,
                      ],
                      "className": "brand",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "PerExchangePairBODY.H1",
                        },
                        "ref": null,
                        "rendered": "PerExchangePairBODY.H1",
                        "type": "h1",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <h2>
                            Simple. 
                            <span
                              className="text-green"
                            >
                              Secure
                            </span>
                            . Transparent.
                          </h2>,
                          "i18nKey": "hero.2",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              "Simple. ",
                              <span
                                className="text-green"
                              >
                                Secure
                              </span>,
                              ". Transparent.",
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            "Simple. ",
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Secure",
                                "className": "text-green",
                              },
                              "ref": null,
                              "rendered": "Secure",
                              "type": "span",
                            },
                            ". Transparent.",
                          ],
                          "type": "h2",
                        },
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(OrderBookWidget)
                      selectedCoin={
                        Object {
                          "deposit": "eth",
                          "receive": "usd",
                        }
                      }
                    />,
                    "className": "widget",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "selectedCoin": Object {
                        "deposit": "eth",
                        "receive": "usd",
                      },
                      "store": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              PerExchangePairHEAD.title
            </title>
            <meta
              content="PerExchangePairHEAD.meta_description"
              name="description"
            />
          </HelmetWrapper>,
          <div
            className="hero"
          >
            <Connect(ErrorAlert) />
            <div
              className="container"
            >
              <div
                className="row"
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="brand"
                  >
                    <h1>
                      PerExchangePairBODY.H1
                    </h1>
                    <Trans
                      i18nKey="hero.2"
                    >
                      <h2>
                        Simple. 
                        <span
                          className="text-green"
                        >
                          Secure
                        </span>
                        . Transparent.
                      </h2>
                    </Trans>
                  </div>
                </div>
                <div
                  className="widget"
                >
                  <Connect(OrderBookWidget)
                    selectedCoin={
                      Object {
                        "deposit": "eth",
                        "receive": "usd",
                      }
                    }
                  />
                </div>
              </div>
            </div>
            <Connect(CoinPrices) />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <title>
                PerExchangePairHEAD.title
              </title>,
              <meta
                content="PerExchangePairHEAD.meta_description"
                name="description"
              />,
            ],
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "PerExchangePairHEAD.title",
              },
              "ref": null,
              "rendered": "PerExchangePairHEAD.title",
              "type": "title",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "content": "PerExchangePairHEAD.meta_description",
                "name": "description",
              },
              "ref": null,
              "rendered": null,
              "type": "meta",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Connect(ErrorAlert) />,
              <div
                className="container"
              >
                <div
                  className="row"
                >
                  <div
                    className="col-xs-12"
                  >
                    <div
                      className="brand"
                    >
                      <h1>
                        PerExchangePairBODY.H1
                      </h1>
                      <Trans
                        i18nKey="hero.2"
                      >
                        <h2>
                          Simple. 
                          <span
                            className="text-green"
                          >
                            Secure
                          </span>
                          . Transparent.
                        </h2>
                      </Trans>
                    </div>
                  </div>
                  <div
                    className="widget"
                  >
                    <Connect(OrderBookWidget)
                      selectedCoin={
                        Object {
                          "deposit": "eth",
                          "receive": "usd",
                        }
                      }
                    />
                  </div>
                </div>
              </div>,
              <Connect(CoinPrices) />,
            ],
            "className": "hero",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="row"
                >
                  <div
                    className="col-xs-12"
                  >
                    <div
                      className="brand"
                    >
                      <h1>
                        PerExchangePairBODY.H1
                      </h1>
                      <Trans
                        i18nKey="hero.2"
                      >
                        <h2>
                          Simple. 
                          <span
                            className="text-green"
                          >
                            Secure
                          </span>
                          . Transparent.
                        </h2>
                      </Trans>
                    </div>
                  </div>
                  <div
                    className="widget"
                  >
                    <Connect(OrderBookWidget)
                      selectedCoin={
                        Object {
                          "deposit": "eth",
                          "receive": "usd",
                        }
                      }
                    />
                  </div>
                </div>,
                "className": "container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-xs-12"
                    >
                      <div
                        className="brand"
                      >
                        <h1>
                          PerExchangePairBODY.H1
                        </h1>
                        <Trans
                          i18nKey="hero.2"
                        >
                          <h2>
                            Simple. 
                            <span
                              className="text-green"
                            >
                              Secure
                            </span>
                            . Transparent.
                          </h2>
                        </Trans>
                      </div>
                    </div>,
                    <div
                      className="widget"
                    >
                      <Connect(OrderBookWidget)
                        selectedCoin={
                          Object {
                            "deposit": "eth",
                            "receive": "usd",
                          }
                        }
                      />
                    </div>,
                  ],
                  "className": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="brand"
                      >
                        <h1>
                          PerExchangePairBODY.H1
                        </h1>
                        <Trans
                          i18nKey="hero.2"
                        >
                          <h2>
                            Simple. 
                            <span
                              className="text-green"
                            >
                              Secure
                            </span>
                            . Transparent.
                          </h2>
                        </Trans>
                      </div>,
                      "className": "col-xs-12",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <h1>
                            PerExchangePairBODY.H1
                          </h1>,
                          <Trans
                            i18nKey="hero.2"
                          >
                            <h2>
                              Simple. 
                              <span
                                className="text-green"
                              >
                                Secure
                              </span>
                              . Transparent.
                            </h2>
                          </Trans>,
                        ],
                        "className": "brand",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "PerExchangePairBODY.H1",
                          },
                          "ref": null,
                          "rendered": "PerExchangePairBODY.H1",
                          "type": "h1",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": <h2>
                              Simple. 
                              <span
                                className="text-green"
                              >
                                Secure
                              </span>
                              . Transparent.
                            </h2>,
                            "i18nKey": "hero.2",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                "Simple. ",
                                <span
                                  className="text-green"
                                >
                                  Secure
                                </span>,
                                ". Transparent.",
                              ],
                            },
                            "ref": null,
                            "rendered": Array [
                              "Simple. ",
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "Secure",
                                  "className": "text-green",
                                },
                                "ref": null,
                                "rendered": "Secure",
                                "type": "span",
                              },
                              ". Transparent.",
                            ],
                            "type": "h2",
                          },
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Connect(OrderBookWidget)
                        selectedCoin={
                          Object {
                            "deposit": "eth",
                            "receive": "usd",
                          }
                        }
                      />,
                      "className": "widget",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "selectedCoin": Object {
                          "deposit": "eth",
                          "receive": "usd",
                        },
                        "store": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {},
    Symbol(enzyme.__providerValues__): Map {},
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
