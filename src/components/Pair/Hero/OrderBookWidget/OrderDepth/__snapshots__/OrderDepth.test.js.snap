// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderDepth renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <I18n
    ns="translations"
  >
    [Function]
  </I18n>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="container"
      >
        <div
          className="heading"
        >
          <h4>
            orderbookwidget.orderbook
          </h4>
        </div>
        <div
          className="content"
        >
          <div
            className="spread"
          >
            <span
              data-test="spread"
            >
              Spread -15.44%
            </span>
          </div>
          <div
            className="header"
          >
            <span
              className=""
            >
              orderbookwidget.size
            </span>
            <span
              className=""
            >
              orderbookwidget.price
            </span>
          </div>
          <div
            className="data"
          >
            <Connect(OrderDepthItem)
              data-test="sell-depth-item"
              item={
                Object {
                  "rate": 0.0000195,
                  "size": 100,
                }
              }
              maxSize={2400}
              side="SELL"
            />
            <Connect(OrderDepthItem)
              data-test="sell-depth-item"
              item={
                Object {
                  "rate": 0.0000194,
                  "size": 100,
                }
              }
              maxSize={2400}
              side="SELL"
            />
            <Connect(OrderDepthItem)
              data-test="sell-depth-item"
              item={
                Object {
                  "rate": 0.00001751,
                  "size": 573,
                }
              }
              maxSize={2400}
              side="SELL"
            />
            <Connect(OrderDepthItem)
              data-test="buy-depth-item"
              item={
                Object {
                  "rate": 0.000015,
                  "size": 2400,
                }
              }
              maxSize={2400}
              side="BUY"
            />
            <Connect(OrderDepthItem)
              data-test="buy-depth-item"
              item={
                Object {
                  "rate": 0.00001705,
                  "size": 1175.00293255,
                }
              }
              maxSize={2400}
              side="BUY"
            />
            <Connect(OrderDepthItem)
              data-test="buy-depth-item"
              item={
                Object {
                  "rate": 55666,
                  "size": 4e-7,
                }
              }
              maxSize={2400}
              side="BUY"
            />
          </div>
        </div>
      </div>,
      "className": "col-xs-12 col-sm-12 col-md-6 col-lg-4 wrapper",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="heading"
          >
            <h4>
              orderbookwidget.orderbook
            </h4>
          </div>,
          <div
            className="content"
          >
            <div
              className="spread"
            >
              <span
                data-test="spread"
              >
                Spread -15.44%
              </span>
            </div>
            <div
              className="header"
            >
              <span
                className=""
              >
                orderbookwidget.size
              </span>
              <span
                className=""
              >
                orderbookwidget.price
              </span>
            </div>
            <div
              className="data"
            >
              <Connect(OrderDepthItem)
                data-test="sell-depth-item"
                item={
                  Object {
                    "rate": 0.0000195,
                    "size": 100,
                  }
                }
                maxSize={2400}
                side="SELL"
              />
              <Connect(OrderDepthItem)
                data-test="sell-depth-item"
                item={
                  Object {
                    "rate": 0.0000194,
                    "size": 100,
                  }
                }
                maxSize={2400}
                side="SELL"
              />
              <Connect(OrderDepthItem)
                data-test="sell-depth-item"
                item={
                  Object {
                    "rate": 0.00001751,
                    "size": 573,
                  }
                }
                maxSize={2400}
                side="SELL"
              />
              <Connect(OrderDepthItem)
                data-test="buy-depth-item"
                item={
                  Object {
                    "rate": 0.000015,
                    "size": 2400,
                  }
                }
                maxSize={2400}
                side="BUY"
              />
              <Connect(OrderDepthItem)
                data-test="buy-depth-item"
                item={
                  Object {
                    "rate": 0.00001705,
                    "size": 1175.00293255,
                  }
                }
                maxSize={2400}
                side="BUY"
              />
              <Connect(OrderDepthItem)
                data-test="buy-depth-item"
                item={
                  Object {
                    "rate": 55666,
                    "size": 4e-7,
                  }
                }
                maxSize={2400}
                side="BUY"
              />
            </div>
          </div>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h4>
              orderbookwidget.orderbook
            </h4>,
            "className": "heading",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "orderbookwidget.orderbook",
            },
            "ref": null,
            "rendered": "orderbookwidget.orderbook",
            "type": "h4",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="spread"
              >
                <span
                  data-test="spread"
                >
                  Spread -15.44%
                </span>
              </div>,
              <div
                className="header"
              >
                <span
                  className=""
                >
                  orderbookwidget.size
                </span>
                <span
                  className=""
                >
                  orderbookwidget.price
                </span>
              </div>,
              <div
                className="data"
              >
                <Connect(OrderDepthItem)
                  data-test="sell-depth-item"
                  item={
                    Object {
                      "rate": 0.0000195,
                      "size": 100,
                    }
                  }
                  maxSize={2400}
                  side="SELL"
                />
                <Connect(OrderDepthItem)
                  data-test="sell-depth-item"
                  item={
                    Object {
                      "rate": 0.0000194,
                      "size": 100,
                    }
                  }
                  maxSize={2400}
                  side="SELL"
                />
                <Connect(OrderDepthItem)
                  data-test="sell-depth-item"
                  item={
                    Object {
                      "rate": 0.00001751,
                      "size": 573,
                    }
                  }
                  maxSize={2400}
                  side="SELL"
                />
                <Connect(OrderDepthItem)
                  data-test="buy-depth-item"
                  item={
                    Object {
                      "rate": 0.000015,
                      "size": 2400,
                    }
                  }
                  maxSize={2400}
                  side="BUY"
                />
                <Connect(OrderDepthItem)
                  data-test="buy-depth-item"
                  item={
                    Object {
                      "rate": 0.00001705,
                      "size": 1175.00293255,
                    }
                  }
                  maxSize={2400}
                  side="BUY"
                />
                <Connect(OrderDepthItem)
                  data-test="buy-depth-item"
                  item={
                    Object {
                      "rate": 55666,
                      "size": 4e-7,
                    }
                  }
                  maxSize={2400}
                  side="BUY"
                />
              </div>,
            ],
            "className": "content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  data-test="spread"
                >
                  Spread -15.44%
                </span>,
                "className": "spread",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Spread -15.44%",
                  "data-test": "spread",
                },
                "ref": null,
                "rendered": "Spread -15.44%",
                "type": "span",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className=""
                  >
                    orderbookwidget.size
                  </span>,
                  <span
                    className=""
                  >
                    orderbookwidget.price
                  </span>,
                ],
                "className": "header",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "orderbookwidget.size",
                    "className": "",
                  },
                  "ref": null,
                  "rendered": "orderbookwidget.size",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "orderbookwidget.price",
                    "className": "",
                  },
                  "ref": null,
                  "rendered": "orderbookwidget.price",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  Array [
                    <Connect(OrderDepthItem)
                      data-test="sell-depth-item"
                      item={
                        Object {
                          "rate": 0.0000195,
                          "size": 100,
                        }
                      }
                      maxSize={2400}
                      side="SELL"
                    />,
                    <Connect(OrderDepthItem)
                      data-test="sell-depth-item"
                      item={
                        Object {
                          "rate": 0.0000194,
                          "size": 100,
                        }
                      }
                      maxSize={2400}
                      side="SELL"
                    />,
                    <Connect(OrderDepthItem)
                      data-test="sell-depth-item"
                      item={
                        Object {
                          "rate": 0.00001751,
                          "size": 573,
                        }
                      }
                      maxSize={2400}
                      side="SELL"
                    />,
                  ],
                  Array [
                    <Connect(OrderDepthItem)
                      data-test="buy-depth-item"
                      item={
                        Object {
                          "rate": 0.000015,
                          "size": 2400,
                        }
                      }
                      maxSize={2400}
                      side="BUY"
                    />,
                    <Connect(OrderDepthItem)
                      data-test="buy-depth-item"
                      item={
                        Object {
                          "rate": 0.00001705,
                          "size": 1175.00293255,
                        }
                      }
                      maxSize={2400}
                      side="BUY"
                    />,
                    <Connect(OrderDepthItem)
                      data-test="buy-depth-item"
                      item={
                        Object {
                          "rate": 55666,
                          "size": 4e-7,
                        }
                      }
                      maxSize={2400}
                      side="BUY"
                    />,
                  ],
                ],
                "className": "data",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0.0000195",
                  "nodeType": "class",
                  "props": Object {
                    "data-test": "sell-depth-item",
                    "item": Object {
                      "rate": 0.0000195,
                      "size": 100,
                    },
                    "maxSize": 2400,
                    "side": "SELL",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "0.0000194",
                  "nodeType": "class",
                  "props": Object {
                    "data-test": "sell-depth-item",
                    "item": Object {
                      "rate": 0.0000194,
                      "size": 100,
                    },
                    "maxSize": 2400,
                    "side": "SELL",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "0.00001751",
                  "nodeType": "class",
                  "props": Object {
                    "data-test": "sell-depth-item",
                    "item": Object {
                      "rate": 0.00001751,
                      "size": 573,
                    },
                    "maxSize": 2400,
                    "side": "SELL",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "0.000015",
                  "nodeType": "class",
                  "props": Object {
                    "data-test": "buy-depth-item",
                    "item": Object {
                      "rate": 0.000015,
                      "size": 2400,
                    },
                    "maxSize": 2400,
                    "side": "BUY",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "0.00001705",
                  "nodeType": "class",
                  "props": Object {
                    "data-test": "buy-depth-item",
                    "item": Object {
                      "rate": 0.00001705,
                      "size": 1175.00293255,
                    },
                    "maxSize": 2400,
                    "side": "BUY",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "55666",
                  "nodeType": "class",
                  "props": Object {
                    "data-test": "buy-depth-item",
                    "item": Object {
                      "rate": 55666,
                      "size": 4e-7,
                    },
                    "maxSize": 2400,
                    "side": "BUY",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <div
            className="heading"
          >
            <h4>
              orderbookwidget.orderbook
            </h4>
          </div>
          <div
            className="content"
          >
            <div
              className="spread"
            >
              <span
                data-test="spread"
              >
                Spread -15.44%
              </span>
            </div>
            <div
              className="header"
            >
              <span
                className=""
              >
                orderbookwidget.size
              </span>
              <span
                className=""
              >
                orderbookwidget.price
              </span>
            </div>
            <div
              className="data"
            >
              <Connect(OrderDepthItem)
                data-test="sell-depth-item"
                item={
                  Object {
                    "rate": 0.0000195,
                    "size": 100,
                  }
                }
                maxSize={2400}
                side="SELL"
              />
              <Connect(OrderDepthItem)
                data-test="sell-depth-item"
                item={
                  Object {
                    "rate": 0.0000194,
                    "size": 100,
                  }
                }
                maxSize={2400}
                side="SELL"
              />
              <Connect(OrderDepthItem)
                data-test="sell-depth-item"
                item={
                  Object {
                    "rate": 0.00001751,
                    "size": 573,
                  }
                }
                maxSize={2400}
                side="SELL"
              />
              <Connect(OrderDepthItem)
                data-test="buy-depth-item"
                item={
                  Object {
                    "rate": 0.000015,
                    "size": 2400,
                  }
                }
                maxSize={2400}
                side="BUY"
              />
              <Connect(OrderDepthItem)
                data-test="buy-depth-item"
                item={
                  Object {
                    "rate": 0.00001705,
                    "size": 1175.00293255,
                  }
                }
                maxSize={2400}
                side="BUY"
              />
              <Connect(OrderDepthItem)
                data-test="buy-depth-item"
                item={
                  Object {
                    "rate": 55666,
                    "size": 4e-7,
                  }
                }
                maxSize={2400}
                side="BUY"
              />
            </div>
          </div>
        </div>,
        "className": "col-xs-12 col-sm-12 col-md-6 col-lg-4 wrapper",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="heading"
            >
              <h4>
                orderbookwidget.orderbook
              </h4>
            </div>,
            <div
              className="content"
            >
              <div
                className="spread"
              >
                <span
                  data-test="spread"
                >
                  Spread -15.44%
                </span>
              </div>
              <div
                className="header"
              >
                <span
                  className=""
                >
                  orderbookwidget.size
                </span>
                <span
                  className=""
                >
                  orderbookwidget.price
                </span>
              </div>
              <div
                className="data"
              >
                <Connect(OrderDepthItem)
                  data-test="sell-depth-item"
                  item={
                    Object {
                      "rate": 0.0000195,
                      "size": 100,
                    }
                  }
                  maxSize={2400}
                  side="SELL"
                />
                <Connect(OrderDepthItem)
                  data-test="sell-depth-item"
                  item={
                    Object {
                      "rate": 0.0000194,
                      "size": 100,
                    }
                  }
                  maxSize={2400}
                  side="SELL"
                />
                <Connect(OrderDepthItem)
                  data-test="sell-depth-item"
                  item={
                    Object {
                      "rate": 0.00001751,
                      "size": 573,
                    }
                  }
                  maxSize={2400}
                  side="SELL"
                />
                <Connect(OrderDepthItem)
                  data-test="buy-depth-item"
                  item={
                    Object {
                      "rate": 0.000015,
                      "size": 2400,
                    }
                  }
                  maxSize={2400}
                  side="BUY"
                />
                <Connect(OrderDepthItem)
                  data-test="buy-depth-item"
                  item={
                    Object {
                      "rate": 0.00001705,
                      "size": 1175.00293255,
                    }
                  }
                  maxSize={2400}
                  side="BUY"
                />
                <Connect(OrderDepthItem)
                  data-test="buy-depth-item"
                  item={
                    Object {
                      "rate": 55666,
                      "size": 4e-7,
                    }
                  }
                  maxSize={2400}
                  side="BUY"
                />
              </div>
            </div>,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h4>
                orderbookwidget.orderbook
              </h4>,
              "className": "heading",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "orderbookwidget.orderbook",
              },
              "ref": null,
              "rendered": "orderbookwidget.orderbook",
              "type": "h4",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="spread"
                >
                  <span
                    data-test="spread"
                  >
                    Spread -15.44%
                  </span>
                </div>,
                <div
                  className="header"
                >
                  <span
                    className=""
                  >
                    orderbookwidget.size
                  </span>
                  <span
                    className=""
                  >
                    orderbookwidget.price
                  </span>
                </div>,
                <div
                  className="data"
                >
                  <Connect(OrderDepthItem)
                    data-test="sell-depth-item"
                    item={
                      Object {
                        "rate": 0.0000195,
                        "size": 100,
                      }
                    }
                    maxSize={2400}
                    side="SELL"
                  />
                  <Connect(OrderDepthItem)
                    data-test="sell-depth-item"
                    item={
                      Object {
                        "rate": 0.0000194,
                        "size": 100,
                      }
                    }
                    maxSize={2400}
                    side="SELL"
                  />
                  <Connect(OrderDepthItem)
                    data-test="sell-depth-item"
                    item={
                      Object {
                        "rate": 0.00001751,
                        "size": 573,
                      }
                    }
                    maxSize={2400}
                    side="SELL"
                  />
                  <Connect(OrderDepthItem)
                    data-test="buy-depth-item"
                    item={
                      Object {
                        "rate": 0.000015,
                        "size": 2400,
                      }
                    }
                    maxSize={2400}
                    side="BUY"
                  />
                  <Connect(OrderDepthItem)
                    data-test="buy-depth-item"
                    item={
                      Object {
                        "rate": 0.00001705,
                        "size": 1175.00293255,
                      }
                    }
                    maxSize={2400}
                    side="BUY"
                  />
                  <Connect(OrderDepthItem)
                    data-test="buy-depth-item"
                    item={
                      Object {
                        "rate": 55666,
                        "size": 4e-7,
                      }
                    }
                    maxSize={2400}
                    side="BUY"
                  />
                </div>,
              ],
              "className": "content",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span
                    data-test="spread"
                  >
                    Spread -15.44%
                  </span>,
                  "className": "spread",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Spread -15.44%",
                    "data-test": "spread",
                  },
                  "ref": null,
                  "rendered": "Spread -15.44%",
                  "type": "span",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className=""
                    >
                      orderbookwidget.size
                    </span>,
                    <span
                      className=""
                    >
                      orderbookwidget.price
                    </span>,
                  ],
                  "className": "header",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "orderbookwidget.size",
                      "className": "",
                    },
                    "ref": null,
                    "rendered": "orderbookwidget.size",
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "orderbookwidget.price",
                      "className": "",
                    },
                    "ref": null,
                    "rendered": "orderbookwidget.price",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    Array [
                      <Connect(OrderDepthItem)
                        data-test="sell-depth-item"
                        item={
                          Object {
                            "rate": 0.0000195,
                            "size": 100,
                          }
                        }
                        maxSize={2400}
                        side="SELL"
                      />,
                      <Connect(OrderDepthItem)
                        data-test="sell-depth-item"
                        item={
                          Object {
                            "rate": 0.0000194,
                            "size": 100,
                          }
                        }
                        maxSize={2400}
                        side="SELL"
                      />,
                      <Connect(OrderDepthItem)
                        data-test="sell-depth-item"
                        item={
                          Object {
                            "rate": 0.00001751,
                            "size": 573,
                          }
                        }
                        maxSize={2400}
                        side="SELL"
                      />,
                    ],
                    Array [
                      <Connect(OrderDepthItem)
                        data-test="buy-depth-item"
                        item={
                          Object {
                            "rate": 0.000015,
                            "size": 2400,
                          }
                        }
                        maxSize={2400}
                        side="BUY"
                      />,
                      <Connect(OrderDepthItem)
                        data-test="buy-depth-item"
                        item={
                          Object {
                            "rate": 0.00001705,
                            "size": 1175.00293255,
                          }
                        }
                        maxSize={2400}
                        side="BUY"
                      />,
                      <Connect(OrderDepthItem)
                        data-test="buy-depth-item"
                        item={
                          Object {
                            "rate": 55666,
                            "size": 4e-7,
                          }
                        }
                        maxSize={2400}
                        side="BUY"
                      />,
                    ],
                  ],
                  "className": "data",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0.0000195",
                    "nodeType": "class",
                    "props": Object {
                      "data-test": "sell-depth-item",
                      "item": Object {
                        "rate": 0.0000195,
                        "size": 100,
                      },
                      "maxSize": 2400,
                      "side": "SELL",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "0.0000194",
                    "nodeType": "class",
                    "props": Object {
                      "data-test": "sell-depth-item",
                      "item": Object {
                        "rate": 0.0000194,
                        "size": 100,
                      },
                      "maxSize": 2400,
                      "side": "SELL",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "0.00001751",
                    "nodeType": "class",
                    "props": Object {
                      "data-test": "sell-depth-item",
                      "item": Object {
                        "rate": 0.00001751,
                        "size": 573,
                      },
                      "maxSize": 2400,
                      "side": "SELL",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "0.000015",
                    "nodeType": "class",
                    "props": Object {
                      "data-test": "buy-depth-item",
                      "item": Object {
                        "rate": 0.000015,
                        "size": 2400,
                      },
                      "maxSize": 2400,
                      "side": "BUY",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "0.00001705",
                    "nodeType": "class",
                    "props": Object {
                      "data-test": "buy-depth-item",
                      "item": Object {
                        "rate": 0.00001705,
                        "size": 1175.00293255,
                      },
                      "maxSize": 2400,
                      "side": "BUY",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "55666",
                    "nodeType": "class",
                    "props": Object {
                      "data-test": "buy-depth-item",
                      "item": Object {
                        "rate": 55666,
                        "size": 4e-7,
                      },
                      "maxSize": 2400,
                      "side": "BUY",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {
      "storeSubscription": undefined,
    },
    Symbol(enzyme.__providerValues__): Map {},
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
