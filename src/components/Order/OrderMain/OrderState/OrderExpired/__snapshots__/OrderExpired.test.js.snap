// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderExpired renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <I18n
    ns="translations"
  >
    [Function]
  </I18n>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <OrderAlert />,
        <h2
          className="title"
        >
          order.expired1
        </h2>,
        <h4
          className="warning"
          data-original-title="order.expired3"
          data-placement="top"
          data-toggle="tooltip"
        >
          order.expired4
        </h4>,
        undefined,
      ],
      "className": "container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "order.expired1",
          "className": "title",
        },
        "ref": null,
        "rendered": "order.expired1",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "order.expired4",
          "className": "warning",
          "data-original-title": "order.expired3",
          "data-placement": "top",
          "data-toggle": "tooltip",
        },
        "ref": null,
        "rendered": "order.expired4",
        "type": "h4",
      },
      undefined,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <OrderAlert />,
          <h2
            className="title"
          >
            order.expired1
          </h2>,
          <h4
            className="warning"
            data-original-title="order.expired3"
            data-placement="top"
            data-toggle="tooltip"
          >
            order.expired4
          </h4>,
          undefined,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "order.expired1",
            "className": "title",
          },
          "ref": null,
          "rendered": "order.expired1",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "order.expired4",
            "className": "warning",
            "data-original-title": "order.expired3",
            "data-placement": "top",
            "data-toggle": "tooltip",
          },
          "ref": null,
          "rendered": "order.expired4",
          "type": "h4",
        },
        undefined,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {},
    Symbol(enzyme.__providerValues__): Map {},
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
