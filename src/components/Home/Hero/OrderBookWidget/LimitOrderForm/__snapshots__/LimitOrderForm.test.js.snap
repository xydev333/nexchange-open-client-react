// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LimitOrderForm renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <I18n
    ns="translations"
  >
    [Function]
  </I18n>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form>
        <div
          className="relative"
        >
          <input
            autoComplete="off"
            className="form-control input"
            id="quantity"
            onChange={[Function]}
            placeholder="orderbookwidget.quantitycoin"
            type="text"
            value=""
          />
        </div>
        <div
          className="relative"
        >
          <input
            autoComplete="off"
            className="form-control input"
            id="limit-rate"
            onChange={[Function]}
            placeholder="orderbookwidget.limitpricecoin"
            type="text"
            value=""
          />
        </div>
        <div
          className="values-preview-container"
        />
      </form>,
      "className": "col-xs-12",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="relative"
          >
            <input
              autoComplete="off"
              className="form-control input"
              id="quantity"
              onChange={[Function]}
              placeholder="orderbookwidget.quantitycoin"
              type="text"
              value=""
            />
          </div>,
          <div
            className="relative"
          >
            <input
              autoComplete="off"
              className="form-control input"
              id="limit-rate"
              onChange={[Function]}
              placeholder="orderbookwidget.limitpricecoin"
              type="text"
              value=""
            />
          </div>,
          <div
            className="values-preview-container"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                autoComplete="off"
                className="form-control input"
                id="quantity"
                onChange={[Function]}
                placeholder="orderbookwidget.quantitycoin"
                type="text"
                value=""
              />,
              null,
            ],
            "className": "relative",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "autoComplete": "off",
                "className": "form-control input",
                "id": "quantity",
                "onChange": [Function],
                "placeholder": "orderbookwidget.quantitycoin",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            null,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                autoComplete="off"
                className="form-control input"
                id="limit-rate"
                onChange={[Function]}
                placeholder="orderbookwidget.limitpricecoin"
                type="text"
                value=""
              />,
              null,
            ],
            "className": "relative",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "autoComplete": "off",
                "className": "form-control input",
                "id": "limit-rate",
                "onChange": [Function],
                "placeholder": "orderbookwidget.limitpricecoin",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            null,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "values-preview-container",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form>
          <div
            className="relative"
          >
            <input
              autoComplete="off"
              className="form-control input"
              id="quantity"
              onChange={[Function]}
              placeholder="orderbookwidget.quantitycoin"
              type="text"
              value=""
            />
          </div>
          <div
            className="relative"
          >
            <input
              autoComplete="off"
              className="form-control input"
              id="limit-rate"
              onChange={[Function]}
              placeholder="orderbookwidget.limitpricecoin"
              type="text"
              value=""
            />
          </div>
          <div
            className="values-preview-container"
          />
        </form>,
        "className": "col-xs-12",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="relative"
            >
              <input
                autoComplete="off"
                className="form-control input"
                id="quantity"
                onChange={[Function]}
                placeholder="orderbookwidget.quantitycoin"
                type="text"
                value=""
              />
            </div>,
            <div
              className="relative"
            >
              <input
                autoComplete="off"
                className="form-control input"
                id="limit-rate"
                onChange={[Function]}
                placeholder="orderbookwidget.limitpricecoin"
                type="text"
                value=""
              />
            </div>,
            <div
              className="values-preview-container"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  autoComplete="off"
                  className="form-control input"
                  id="quantity"
                  onChange={[Function]}
                  placeholder="orderbookwidget.quantitycoin"
                  type="text"
                  value=""
                />,
                null,
              ],
              "className": "relative",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoComplete": "off",
                  "className": "form-control input",
                  "id": "quantity",
                  "onChange": [Function],
                  "placeholder": "orderbookwidget.quantitycoin",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              null,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  autoComplete="off"
                  className="form-control input"
                  id="limit-rate"
                  onChange={[Function]}
                  placeholder="orderbookwidget.limitpricecoin"
                  type="text"
                  value=""
                />,
                null,
              ],
              "className": "relative",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "autoComplete": "off",
                  "className": "form-control input",
                  "id": "limit-rate",
                  "onChange": [Function],
                  "placeholder": "orderbookwidget.limitpricecoin",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              null,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "values-preview-container",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {
      "storeSubscription": undefined,
    },
    Symbol(enzyme.__providerValues__): Map {},
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
