// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderBookWidget renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <I18n
    ns="translations"
  >
    [Function]
  </I18n>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="container"
      >
        <div
          className="row"
        >
          <div
            className="col-xs-12"
          >
            <div
              className="widget"
            >
              <OrderModeSwitch />
              <div
                className="col-xs-12 col-sm-12 col-md-6 col-lg-4"
              >
                <div
                  className="col-xs-12 pair-selection"
                >
                  <Unknown
                    orderBook={true}
                    type="deposit"
                  />
                  <Unknown
                    orderBook={true}
                    type="receive"
                  />
                </div>
                <ul
                  className="nav nav-tabs tabs"
                >
                  <li>
                    <a
                      className="clickable active"
                      onClick={[Function]}
                    >
                      Buy
                    </a>
                    <div
                      className="arrow-down"
                    />
                  </li>
                  <li>
                    <a
                      className="clickable "
                      onClick={[Function]}
                    >
                      Sell
                    </a>
                  </li>
                </ul>
                <Connect(LimitOrderForm)
                  inputRef={[Function]}
                />
                <Connect(WalletAddress)
                  inputRef={[Function]}
                  withdraw_coin="receive"
                />
                <div
                  className="col-xs-12"
                >
                  <button
                    className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                    onClick={[Function]}
                  >
                    Buy ETH with OMG
                  </button>
                </div>
              </div>
              <OrderDepth
                buyDepth={Array []}
                selectedCoins={
                  Object {
                    "deposit": "OMG",
                    "lastSelected": "deposit",
                    "prev": Object {
                      "deposit": "OMG",
                      "receive": "ETH",
                    },
                    "receive": "ETH",
                  }
                }
                sellDepth={Array []}
              />
              <Connect(MyOrders) />
            </div>
          </div>
        </div>
      </div>,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="row"
        >
          <div
            className="col-xs-12"
          >
            <div
              className="widget"
            >
              <OrderModeSwitch />
              <div
                className="col-xs-12 col-sm-12 col-md-6 col-lg-4"
              >
                <div
                  className="col-xs-12 pair-selection"
                >
                  <Unknown
                    orderBook={true}
                    type="deposit"
                  />
                  <Unknown
                    orderBook={true}
                    type="receive"
                  />
                </div>
                <ul
                  className="nav nav-tabs tabs"
                >
                  <li>
                    <a
                      className="clickable active"
                      onClick={[Function]}
                    >
                      Buy
                    </a>
                    <div
                      className="arrow-down"
                    />
                  </li>
                  <li>
                    <a
                      className="clickable "
                      onClick={[Function]}
                    >
                      Sell
                    </a>
                  </li>
                </ul>
                <Connect(LimitOrderForm)
                  inputRef={[Function]}
                />
                <Connect(WalletAddress)
                  inputRef={[Function]}
                  withdraw_coin="receive"
                />
                <div
                  className="col-xs-12"
                >
                  <button
                    className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                    onClick={[Function]}
                  >
                    Buy ETH with OMG
                  </button>
                </div>
              </div>
              <OrderDepth
                buyDepth={Array []}
                selectedCoins={
                  Object {
                    "deposit": "OMG",
                    "lastSelected": "deposit",
                    "prev": Object {
                      "deposit": "OMG",
                      "receive": "ETH",
                    },
                    "receive": "ETH",
                  }
                }
                sellDepth={Array []}
              />
              <Connect(MyOrders) />
            </div>
          </div>
        </div>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col-xs-12"
          >
            <div
              className="widget"
            >
              <OrderModeSwitch />
              <div
                className="col-xs-12 col-sm-12 col-md-6 col-lg-4"
              >
                <div
                  className="col-xs-12 pair-selection"
                >
                  <Unknown
                    orderBook={true}
                    type="deposit"
                  />
                  <Unknown
                    orderBook={true}
                    type="receive"
                  />
                </div>
                <ul
                  className="nav nav-tabs tabs"
                >
                  <li>
                    <a
                      className="clickable active"
                      onClick={[Function]}
                    >
                      Buy
                    </a>
                    <div
                      className="arrow-down"
                    />
                  </li>
                  <li>
                    <a
                      className="clickable "
                      onClick={[Function]}
                    >
                      Sell
                    </a>
                  </li>
                </ul>
                <Connect(LimitOrderForm)
                  inputRef={[Function]}
                />
                <Connect(WalletAddress)
                  inputRef={[Function]}
                  withdraw_coin="receive"
                />
                <div
                  className="col-xs-12"
                >
                  <button
                    className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                    onClick={[Function]}
                  >
                    Buy ETH with OMG
                  </button>
                </div>
              </div>
              <OrderDepth
                buyDepth={Array []}
                selectedCoins={
                  Object {
                    "deposit": "OMG",
                    "lastSelected": "deposit",
                    "prev": Object {
                      "deposit": "OMG",
                      "receive": "ETH",
                    },
                    "receive": "ETH",
                  }
                }
                sellDepth={Array []}
              />
              <Connect(MyOrders) />
            </div>
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="widget"
            >
              <OrderModeSwitch />
              <div
                className="col-xs-12 col-sm-12 col-md-6 col-lg-4"
              >
                <div
                  className="col-xs-12 pair-selection"
                >
                  <Unknown
                    orderBook={true}
                    type="deposit"
                  />
                  <Unknown
                    orderBook={true}
                    type="receive"
                  />
                </div>
                <ul
                  className="nav nav-tabs tabs"
                >
                  <li>
                    <a
                      className="clickable active"
                      onClick={[Function]}
                    >
                      Buy
                    </a>
                    <div
                      className="arrow-down"
                    />
                  </li>
                  <li>
                    <a
                      className="clickable "
                      onClick={[Function]}
                    >
                      Sell
                    </a>
                  </li>
                </ul>
                <Connect(LimitOrderForm)
                  inputRef={[Function]}
                />
                <Connect(WalletAddress)
                  inputRef={[Function]}
                  withdraw_coin="receive"
                />
                <div
                  className="col-xs-12"
                >
                  <button
                    className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                    onClick={[Function]}
                  >
                    Buy ETH with OMG
                  </button>
                </div>
              </div>
              <OrderDepth
                buyDepth={Array []}
                selectedCoins={
                  Object {
                    "deposit": "OMG",
                    "lastSelected": "deposit",
                    "prev": Object {
                      "deposit": "OMG",
                      "receive": "ETH",
                    },
                    "receive": "ETH",
                  }
                }
                sellDepth={Array []}
              />
              <Connect(MyOrders) />
            </div>,
            "className": "col-xs-12",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <OrderModeSwitch />,
                <div
                  className="col-xs-12 col-sm-12 col-md-6 col-lg-4"
                >
                  <div
                    className="col-xs-12 pair-selection"
                  >
                    <Unknown
                      orderBook={true}
                      type="deposit"
                    />
                    <Unknown
                      orderBook={true}
                      type="receive"
                    />
                  </div>
                  <ul
                    className="nav nav-tabs tabs"
                  >
                    <li>
                      <a
                        className="clickable active"
                        onClick={[Function]}
                      >
                        Buy
                      </a>
                      <div
                        className="arrow-down"
                      />
                    </li>
                    <li>
                      <a
                        className="clickable "
                        onClick={[Function]}
                      >
                        Sell
                      </a>
                    </li>
                  </ul>
                  <Connect(LimitOrderForm)
                    inputRef={[Function]}
                  />
                  <Connect(WalletAddress)
                    inputRef={[Function]}
                    withdraw_coin="receive"
                  />
                  <div
                    className="col-xs-12"
                  >
                    <button
                      className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                      onClick={[Function]}
                    >
                      Buy ETH with OMG
                    </button>
                  </div>
                </div>,
                <OrderDepth
                  buyDepth={Array []}
                  selectedCoins={
                    Object {
                      "deposit": "OMG",
                      "lastSelected": "deposit",
                      "prev": Object {
                        "deposit": "OMG",
                        "receive": "ETH",
                      },
                      "receive": "ETH",
                    }
                  }
                  sellDepth={Array []}
                />,
                <Connect(MyOrders) />,
              ],
              "className": "widget",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "changeOrderMode": undefined,
                  "orderMode": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-xs-12 pair-selection"
                    >
                      <Unknown
                        orderBook={true}
                        type="deposit"
                      />
                      <Unknown
                        orderBook={true}
                        type="receive"
                      />
                    </div>,
                    <ul
                      className="nav nav-tabs tabs"
                    >
                      <li>
                        <a
                          className="clickable active"
                          onClick={[Function]}
                        >
                          Buy
                        </a>
                        <div
                          className="arrow-down"
                        />
                      </li>
                      <li>
                        <a
                          className="clickable "
                          onClick={[Function]}
                        >
                          Sell
                        </a>
                      </li>
                    </ul>,
                    <Connect(LimitOrderForm)
                      inputRef={[Function]}
                    />,
                    <Connect(WalletAddress)
                      inputRef={[Function]}
                      withdraw_coin="receive"
                    />,
                    <div
                      className="col-xs-12"
                    >
                      <button
                        className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                        onClick={[Function]}
                      >
                        Buy ETH with OMG
                      </button>
                    </div>,
                  ],
                  "className": "col-xs-12 col-sm-12 col-md-6 col-lg-4",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Unknown
                          orderBook={true}
                          type="deposit"
                        />,
                        <Unknown
                          orderBook={true}
                          type="receive"
                        />,
                      ],
                      "className": "col-xs-12 pair-selection",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "orderBook": true,
                          "type": "deposit",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "orderBook": true,
                          "type": "receive",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <li>
                          <a
                            className="clickable active"
                            onClick={[Function]}
                          >
                            Buy
                          </a>
                          <div
                            className="arrow-down"
                          />
                        </li>,
                        <li>
                          <a
                            className="clickable "
                            onClick={[Function]}
                          >
                            Sell
                          </a>
                        </li>,
                      ],
                      "className": "nav nav-tabs tabs",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <a
                              className="clickable active"
                              onClick={[Function]}
                            >
                              Buy
                            </a>,
                            <div
                              className="arrow-down"
                            />,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Buy",
                              "className": "clickable active",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "rendered": "Buy",
                            "type": "a",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "className": "arrow-down",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": "div",
                          },
                        ],
                        "type": "li",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <a
                              className="clickable "
                              onClick={[Function]}
                            >
                              Sell
                            </a>,
                            null,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Sell",
                              "className": "clickable ",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "rendered": "Sell",
                            "type": "a",
                          },
                          null,
                        ],
                        "type": "li",
                      },
                    ],
                    "type": "ul",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "inputRef": [Function],
                      "limit_rate": undefined,
                      "quantity": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "button": undefined,
                      "inputRef": [Function],
                      "withdraw_coin": "receive",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                        onClick={[Function]}
                      >
                        Buy ETH with OMG
                      </button>,
                      "className": "col-xs-12",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Buy ETH with OMG",
                        "className": "btn btn-buy 
                          disabled btn btn-block btn-primary proceed ",
                        "onClick": [Function],
                      },
                      "ref": [Function],
                      "rendered": "Buy ETH with OMG",
                      "type": "button",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "buyDepth": Array [],
                  "selectedCoins": Object {
                    "deposit": "OMG",
                    "lastSelected": "deposit",
                    "prev": Object {
                      "deposit": "OMG",
                      "receive": "ETH",
                    },
                    "receive": "ETH",
                  },
                  "sellDepth": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <div
            className="row"
          >
            <div
              className="col-xs-12"
            >
              <div
                className="widget"
              >
                <OrderModeSwitch />
                <div
                  className="col-xs-12 col-sm-12 col-md-6 col-lg-4"
                >
                  <div
                    className="col-xs-12 pair-selection"
                  >
                    <Unknown
                      orderBook={true}
                      type="deposit"
                    />
                    <Unknown
                      orderBook={true}
                      type="receive"
                    />
                  </div>
                  <ul
                    className="nav nav-tabs tabs"
                  >
                    <li>
                      <a
                        className="clickable active"
                        onClick={[Function]}
                      >
                        Buy
                      </a>
                      <div
                        className="arrow-down"
                      />
                    </li>
                    <li>
                      <a
                        className="clickable "
                        onClick={[Function]}
                      >
                        Sell
                      </a>
                    </li>
                  </ul>
                  <Connect(LimitOrderForm)
                    inputRef={[Function]}
                  />
                  <Connect(WalletAddress)
                    inputRef={[Function]}
                    withdraw_coin="receive"
                  />
                  <div
                    className="col-xs-12"
                  >
                    <button
                      className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                      onClick={[Function]}
                    >
                      Buy ETH with OMG
                    </button>
                  </div>
                </div>
                <OrderDepth
                  buyDepth={Array []}
                  selectedCoins={
                    Object {
                      "deposit": "OMG",
                      "lastSelected": "deposit",
                      "prev": Object {
                        "deposit": "OMG",
                        "receive": "ETH",
                      },
                      "receive": "ETH",
                    }
                  }
                  sellDepth={Array []}
                />
                <Connect(MyOrders) />
              </div>
            </div>
          </div>
        </div>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row"
          >
            <div
              className="col-xs-12"
            >
              <div
                className="widget"
              >
                <OrderModeSwitch />
                <div
                  className="col-xs-12 col-sm-12 col-md-6 col-lg-4"
                >
                  <div
                    className="col-xs-12 pair-selection"
                  >
                    <Unknown
                      orderBook={true}
                      type="deposit"
                    />
                    <Unknown
                      orderBook={true}
                      type="receive"
                    />
                  </div>
                  <ul
                    className="nav nav-tabs tabs"
                  >
                    <li>
                      <a
                        className="clickable active"
                        onClick={[Function]}
                      >
                        Buy
                      </a>
                      <div
                        className="arrow-down"
                      />
                    </li>
                    <li>
                      <a
                        className="clickable "
                        onClick={[Function]}
                      >
                        Sell
                      </a>
                    </li>
                  </ul>
                  <Connect(LimitOrderForm)
                    inputRef={[Function]}
                  />
                  <Connect(WalletAddress)
                    inputRef={[Function]}
                    withdraw_coin="receive"
                  />
                  <div
                    className="col-xs-12"
                  >
                    <button
                      className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                      onClick={[Function]}
                    >
                      Buy ETH with OMG
                    </button>
                  </div>
                </div>
                <OrderDepth
                  buyDepth={Array []}
                  selectedCoins={
                    Object {
                      "deposit": "OMG",
                      "lastSelected": "deposit",
                      "prev": Object {
                        "deposit": "OMG",
                        "receive": "ETH",
                      },
                      "receive": "ETH",
                    }
                  }
                  sellDepth={Array []}
                />
                <Connect(MyOrders) />
              </div>
            </div>
          </div>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-xs-12"
            >
              <div
                className="widget"
              >
                <OrderModeSwitch />
                <div
                  className="col-xs-12 col-sm-12 col-md-6 col-lg-4"
                >
                  <div
                    className="col-xs-12 pair-selection"
                  >
                    <Unknown
                      orderBook={true}
                      type="deposit"
                    />
                    <Unknown
                      orderBook={true}
                      type="receive"
                    />
                  </div>
                  <ul
                    className="nav nav-tabs tabs"
                  >
                    <li>
                      <a
                        className="clickable active"
                        onClick={[Function]}
                      >
                        Buy
                      </a>
                      <div
                        className="arrow-down"
                      />
                    </li>
                    <li>
                      <a
                        className="clickable "
                        onClick={[Function]}
                      >
                        Sell
                      </a>
                    </li>
                  </ul>
                  <Connect(LimitOrderForm)
                    inputRef={[Function]}
                  />
                  <Connect(WalletAddress)
                    inputRef={[Function]}
                    withdraw_coin="receive"
                  />
                  <div
                    className="col-xs-12"
                  >
                    <button
                      className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                      onClick={[Function]}
                    >
                      Buy ETH with OMG
                    </button>
                  </div>
                </div>
                <OrderDepth
                  buyDepth={Array []}
                  selectedCoins={
                    Object {
                      "deposit": "OMG",
                      "lastSelected": "deposit",
                      "prev": Object {
                        "deposit": "OMG",
                        "receive": "ETH",
                      },
                      "receive": "ETH",
                    }
                  }
                  sellDepth={Array []}
                />
                <Connect(MyOrders) />
              </div>
            </div>,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="widget"
              >
                <OrderModeSwitch />
                <div
                  className="col-xs-12 col-sm-12 col-md-6 col-lg-4"
                >
                  <div
                    className="col-xs-12 pair-selection"
                  >
                    <Unknown
                      orderBook={true}
                      type="deposit"
                    />
                    <Unknown
                      orderBook={true}
                      type="receive"
                    />
                  </div>
                  <ul
                    className="nav nav-tabs tabs"
                  >
                    <li>
                      <a
                        className="clickable active"
                        onClick={[Function]}
                      >
                        Buy
                      </a>
                      <div
                        className="arrow-down"
                      />
                    </li>
                    <li>
                      <a
                        className="clickable "
                        onClick={[Function]}
                      >
                        Sell
                      </a>
                    </li>
                  </ul>
                  <Connect(LimitOrderForm)
                    inputRef={[Function]}
                  />
                  <Connect(WalletAddress)
                    inputRef={[Function]}
                    withdraw_coin="receive"
                  />
                  <div
                    className="col-xs-12"
                  >
                    <button
                      className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                      onClick={[Function]}
                    >
                      Buy ETH with OMG
                    </button>
                  </div>
                </div>
                <OrderDepth
                  buyDepth={Array []}
                  selectedCoins={
                    Object {
                      "deposit": "OMG",
                      "lastSelected": "deposit",
                      "prev": Object {
                        "deposit": "OMG",
                        "receive": "ETH",
                      },
                      "receive": "ETH",
                    }
                  }
                  sellDepth={Array []}
                />
                <Connect(MyOrders) />
              </div>,
              "className": "col-xs-12",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <OrderModeSwitch />,
                  <div
                    className="col-xs-12 col-sm-12 col-md-6 col-lg-4"
                  >
                    <div
                      className="col-xs-12 pair-selection"
                    >
                      <Unknown
                        orderBook={true}
                        type="deposit"
                      />
                      <Unknown
                        orderBook={true}
                        type="receive"
                      />
                    </div>
                    <ul
                      className="nav nav-tabs tabs"
                    >
                      <li>
                        <a
                          className="clickable active"
                          onClick={[Function]}
                        >
                          Buy
                        </a>
                        <div
                          className="arrow-down"
                        />
                      </li>
                      <li>
                        <a
                          className="clickable "
                          onClick={[Function]}
                        >
                          Sell
                        </a>
                      </li>
                    </ul>
                    <Connect(LimitOrderForm)
                      inputRef={[Function]}
                    />
                    <Connect(WalletAddress)
                      inputRef={[Function]}
                      withdraw_coin="receive"
                    />
                    <div
                      className="col-xs-12"
                    >
                      <button
                        className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                        onClick={[Function]}
                      >
                        Buy ETH with OMG
                      </button>
                    </div>
                  </div>,
                  <OrderDepth
                    buyDepth={Array []}
                    selectedCoins={
                      Object {
                        "deposit": "OMG",
                        "lastSelected": "deposit",
                        "prev": Object {
                          "deposit": "OMG",
                          "receive": "ETH",
                        },
                        "receive": "ETH",
                      }
                    }
                    sellDepth={Array []}
                  />,
                  <Connect(MyOrders) />,
                ],
                "className": "widget",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "changeOrderMode": undefined,
                    "orderMode": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="col-xs-12 pair-selection"
                      >
                        <Unknown
                          orderBook={true}
                          type="deposit"
                        />
                        <Unknown
                          orderBook={true}
                          type="receive"
                        />
                      </div>,
                      <ul
                        className="nav nav-tabs tabs"
                      >
                        <li>
                          <a
                            className="clickable active"
                            onClick={[Function]}
                          >
                            Buy
                          </a>
                          <div
                            className="arrow-down"
                          />
                        </li>
                        <li>
                          <a
                            className="clickable "
                            onClick={[Function]}
                          >
                            Sell
                          </a>
                        </li>
                      </ul>,
                      <Connect(LimitOrderForm)
                        inputRef={[Function]}
                      />,
                      <Connect(WalletAddress)
                        inputRef={[Function]}
                        withdraw_coin="receive"
                      />,
                      <div
                        className="col-xs-12"
                      >
                        <button
                          className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                          onClick={[Function]}
                        >
                          Buy ETH with OMG
                        </button>
                      </div>,
                    ],
                    "className": "col-xs-12 col-sm-12 col-md-6 col-lg-4",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <Unknown
                            orderBook={true}
                            type="deposit"
                          />,
                          <Unknown
                            orderBook={true}
                            type="receive"
                          />,
                        ],
                        "className": "col-xs-12 pair-selection",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "orderBook": true,
                            "type": "deposit",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "orderBook": true,
                            "type": "receive",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <li>
                            <a
                              className="clickable active"
                              onClick={[Function]}
                            >
                              Buy
                            </a>
                            <div
                              className="arrow-down"
                            />
                          </li>,
                          <li>
                            <a
                              className="clickable "
                              onClick={[Function]}
                            >
                              Sell
                            </a>
                          </li>,
                        ],
                        "className": "nav nav-tabs tabs",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <a
                                className="clickable active"
                                onClick={[Function]}
                              >
                                Buy
                              </a>,
                              <div
                                className="arrow-down"
                              />,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Buy",
                                "className": "clickable active",
                                "onClick": [Function],
                              },
                              "ref": null,
                              "rendered": "Buy",
                              "type": "a",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "className": "arrow-down",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "div",
                            },
                          ],
                          "type": "li",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <a
                                className="clickable "
                                onClick={[Function]}
                              >
                                Sell
                              </a>,
                              null,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Sell",
                                "className": "clickable ",
                                "onClick": [Function],
                              },
                              "ref": null,
                              "rendered": "Sell",
                              "type": "a",
                            },
                            null,
                          ],
                          "type": "li",
                        },
                      ],
                      "type": "ul",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "inputRef": [Function],
                        "limit_rate": undefined,
                        "quantity": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "button": undefined,
                        "inputRef": [Function],
                        "withdraw_coin": "receive",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <button
                          className="btn btn-buy 
                          disabled btn btn-block btn-primary proceed "
                          onClick={[Function]}
                        >
                          Buy ETH with OMG
                        </button>,
                        "className": "col-xs-12",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Buy ETH with OMG",
                          "className": "btn btn-buy 
                          disabled btn btn-block btn-primary proceed ",
                          "onClick": [Function],
                        },
                        "ref": [Function],
                        "rendered": "Buy ETH with OMG",
                        "type": "button",
                      },
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "buyDepth": Array [],
                    "selectedCoins": Object {
                      "deposit": "OMG",
                      "lastSelected": "deposit",
                      "prev": Object {
                        "deposit": "OMG",
                        "receive": "ETH",
                      },
                      "receive": "ETH",
                    },
                    "sellDepth": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {
      "storeSubscription": undefined,
    },
  },
}
`;
